@model LMS.ViewModels.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

<div class="row">
    <div class="col-md-6">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Change Password</h3>
            </div>

           @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { role = "form" }))
           {
                <div class="box-body">
                    <p class="text-success">@ViewBag.StatusMessage</p>
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.OldPassword, new { @class = "control-label" })
                        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewPassword, new { @class = "control-label" })
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="box-footer">
                    <button type="submit" class="btn btn-success pull-right">Change Password</button>
                </div>
            }
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}